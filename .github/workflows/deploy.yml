name: Deploy to Github Pages
on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  build-frontend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4.1.7

      - name: Setup Node.js
        uses: irby/setup-node-nvm@v1.0.0

      - name: Enable Corepack
        run: corepack enable

      - name: Install Dependencies
        run: corepack pnpm install

      - name: Build
        run: corepack pnpm run generate

      - name: Upload artifact
        uses: actions/upload-artifact@v4.4.0
        with:
          path: dist
          name: frontend-dist

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3.0.1
        with:
          path: dist
          name: gthub-page

  deploy-to-github-page:
    needs: build-frontend
    
    permissions:
      pages: write
      id-token: write
      
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
      
    runs-on: ubuntu-latest

    steps:
      - name: Deploy to Github Pages
        id: deployment
        uses: actions/deploy-pages@v4.0.5
        with:
          artifact_name: github-page

  build-app:
    permissions:
      contents: write
    
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: 'macos-latest' # for Arm based macs.
            args: '--target aarch64-apple-darwin'
          - platform: 'macos-latest' # for Intel based macs.
            args: '--target x86_64-apple-darwin'
          - platform: 'windows-latest'
            args: ''
      
    runs-on: ${{ matrix.platform }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4.1.7

      - name: Fetch frontend dist
        uses: actions/download-artifact@v4.1.8
        with:
          name: frontend-dist

      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          # Those targets are only used on macos runners so it's in an `if` to slightly speed up windows and linux builds.
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}
      
      - name: build app
        uses: tauri-apps/tauri-action@v0.5.13
        with:
          tagName: app-v__VERSION__
          releaseName: 'App v__VERSION__'
          releaseBody: 'See the assets to download this version and install.'
          releaseDraft: false
          prerelease: false
          args: ${{ matrix.args }}